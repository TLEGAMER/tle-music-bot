import os
import discord
from discord.ext import commands
import yt_dlp

intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix="!", intents=intents, help_command=None)

class Song:
    def __init__(self, url, title):
        self.url = url
        self.title = title

song_queue = []

def get_info(url):
    ytdl_opts = {
        'format': 'bestaudio/best',
        'quiet': True,
        'no_warnings': True,
        'default_search': 'auto',
        'noplaylist': True,
        'extract_flat': False,
        'source_address': '0.0.0.0'
    }
    with yt_dlp.YoutubeDL(ytdl_opts) as ytdl:
        info = ytdl.extract_info(url, download=False)
        if 'entries' in info:
            info = info['entries'][0]
        return {
            'url': info['url'],
            'title': info.get('title', 'Unknown Title'),
            'webpage_url': info.get('webpage_url', url)
        }

async def play_next(ctx):
    if len(song_queue) > 0:
        song = song_queue[0]
        ffmpeg_options = {
            'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
            'options': '-vn'
        }
        source = discord.FFmpegPCMAudio(song.url, **ffmpeg_options)
        ctx.voice_client.play(source, after=lambda e: bot.loop.create_task(after_play(ctx, e)))
        await ctx.send(f"üé∂ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: **{song.title}**")
    else:
        await ctx.voice_client.disconnect()
        await ctx.send("‡∏´‡∏°‡∏î‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")

async def after_play(ctx, error):
    if error:
        print(f'Error playing song: {error}')
    try:
        if len(song_queue) > 0:
            song_queue.pop(0)
        if len(song_queue) > 0:
            await play_next(ctx)
        else:
            await ctx.send("‡∏´‡∏°‡∏î‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏ö‡∏≠‡∏ó‡∏¢‡∏±‡∏á‡∏£‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠‡πÑ‡∏õ")
    except Exception as e:
        print(f"Error in after_play: {e}")

@bot.command(name='play')
async def play(ctx, *, url: str):
    if not ctx.author.voice or not ctx.author.voice.channel:
        await ctx.send("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏±‡πà‡∏á‡πÄ‡∏û‡∏•‡∏á!")
        return

    if not ctx.voice_client:
        await ctx.author.voice.channel.connect()
    elif ctx.voice_client.channel != ctx.author.voice.channel:
        await ctx.voice_client.move_to(ctx.author.voice.channel)

    info = get_info(url)
    song = Song(info['url'], info['title'])
    song_queue.append(song)
    await ctx.send(f"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á **{song.title}** ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß")

    if not ctx.voice_client.is_playing():
        await play_next(ctx)

@bot.command(name='stop')
async def stop(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        song_queue.clear()
        await ctx.send("‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await ctx.send("‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á!")

@bot.command(name='skip')
async def skip(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.stop()
        await ctx.send("‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")
    else:
        await ctx.send("‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")

@bot.command(name='leave')
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.send("üëã ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÅ‡∏•‡πâ‡∏ß")
    else:
        await ctx.send("‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞!")

@bot.command(name='queue')
async def queue_(ctx):
    if len(song_queue) == 0:
        await ctx.send("üéµ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ")
    else:
        queue_list = ""
        for i, song in enumerate(song_queue, start=1):
            queue_list += f"{i}. {song.title}\n"
        await ctx.send(f"üé∂ **‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ:**\n{queue_list}")

@bot.command(name='help')
async def help_command(ctx):
    author = ctx.author.mention
    help_text = f"""
‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {author} ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ:

**!play <url>** - ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏à‡∏≤‡∏Å YouTube ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß  
**!stop** - ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á  
**!skip** - ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô  
**!queue** - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡πÄ‡∏•‡πà‡∏ô  
**!help** - ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ô‡∏µ‡πâ  

‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏ó‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ üé∂
"""
    await ctx.send(help_text)

bot.run(os.getenv("TOKEN"))
